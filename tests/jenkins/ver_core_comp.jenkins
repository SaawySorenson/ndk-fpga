/*
 * comp.jenkins: Jenkins configuration script
 * Copyright (C) 2023 CESNET z. s. p. o.
 * Author(s): Daniel Kriz <danielkriz@cesnet.cz>
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Clean previous builds
library 'liberouter'
cleanBuilds()

// /////////////////////////////////////////////////////////////////////////////
// BASIC-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT:
//  [ 'name',              'path_to_ver',                                          'script.fdo'   ],
def COMPONENTS_VER = [\
    ['NETWORK_MOD_LOGIC' , 'core/comp/eth/network_mod/comp/network_mod_logic/uvm', 'top_level.fdo'],\
]
// /////////////////////////////////////////////////////////////////////////////

// /////////////////////////////////////////////////////////////////////////////
// MULTI-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT:
//  [ 'name'             ,'path_to_ver'                                                 ,'fdo_file.fdo'              ,'test_pkg.sv/.vhd'     ,'settings.py'    ]
def COMPONENTS_MULTIVER = [\
    ['DMA_TRANS_ACCU'    ,'extra/dma-medusa/rx/comp/dma_endpoint/comp/trans_accu/ver'   ,'top_level.fdo'             ,'tbench/test_pkg.sv'   ,'ver_settings.py'],\
    ['PCIE_ADAPTERS'     ,'core/comp/pcie/pcie_mod/comp/pcie_adapter/uvm'               ,'top_level.fdo'             ,'tbench/tests/pkg.sv'  ,'ver_settings.py'],\
    ['PCIE_TOP'          ,'core/comp/pcie/pcie_mod/uvm'                                 ,'top_level.fdo'             ,'tbench/tests/pkg.sv'  ,'ver_settings.py'],\
    ['NETWORK_MOD'       ,'core/comp/eth/network_mod/uvm'                               ,'top_level.fdo'             ,'tbench/tests/pkg.sv'  ,'ver_settings.py'],\
]
 /////////////////////////////////////////////////////////////////////////////

// Run component verifications using common script
node('preklad') {
    lock(label:"resources-${env.NODE_NAME}", quantity: 1) {
        // fetch sources from GIT
        checkout scm
        def common_run = load "tests/jenkins/common.jenkins"
        common_run.commonPrekladVerRun(COMPONENTS_VER)
        common_run.commonPrekladMultiVerRun(COMPONENTS_MULTIVER)
    }
}

